// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SongBook.Repo;

namespace SongBook.Repo.Migrations
{
    [DbContext(typeof(SongBookDbContext))]
    partial class SongBookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SongBook.Domain.Models.Chord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChordSchema")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chords");
                });

            modelBuilder.Entity("SongBook.Domain.Models.Performer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");
                });

            modelBuilder.Entity("SongBook.Domain.Models.Song", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("PerformerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("SongBook.Domain.Models.Song", b =>
                {
                    b.HasOne("SongBook.Domain.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("SongBook.Domain.Models.Description", "PerformerDescription", b1 =>
                        {
                            b1.Property<long>("SongId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Text")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SongId");

                            b1.ToTable("Songs");

                            b1.WithOwner()
                                .HasForeignKey("SongId");
                        });

                    b.OwnsOne("SongBook.Domain.Models.Description", "UserDescription", b1 =>
                        {
                            b1.Property<long>("SongId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Text")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SongId");

                            b1.ToTable("Songs");

                            b1.WithOwner()
                                .HasForeignKey("SongId");
                        });

                    b.OwnsMany("SongBook.Domain.Models.Paragraph", "Paragraphs", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<byte>("Number")
                                .HasColumnType("tinyint");

                            b1.Property<long>("SongId")
                                .HasColumnType("bigint");

                            b1.Property<byte>("Type")
                                .HasColumnType("tinyint");

                            b1.HasKey("Id");

                            b1.HasIndex("SongId");

                            b1.ToTable("Paragraphs");

                            b1.WithOwner()
                                .HasForeignKey("SongId");

                            b1.OwnsMany("SongBook.Domain.Models.Line", "Lines", b2 =>
                                {
                                    b2.Property<long>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<byte>("Number")
                                        .HasColumnType("tinyint");

                                    b2.Property<long>("ParagraphId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Text")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ParagraphId");

                                    b2.ToTable("Lines");

                                    b2.WithOwner()
                                        .HasForeignKey("ParagraphId");

                                    b2.OwnsMany("SongBook.Domain.Models.LineChord", "LineChords", b3 =>
                                        {
                                            b3.Property<long>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("bigint")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<long?>("ChordId")
                                                .HasColumnType("bigint");

                                            b3.Property<long>("LineId")
                                                .HasColumnType("bigint");

                                            b3.Property<byte>("Number")
                                                .HasColumnType("tinyint");

                                            b3.HasKey("Id");

                                            b3.HasIndex("ChordId");

                                            b3.HasIndex("LineId");

                                            b3.ToTable("LineChords");

                                            b3.HasOne("SongBook.Domain.Models.Chord", "Chord")
                                                .WithMany()
                                                .HasForeignKey("ChordId");

                                            b3.WithOwner()
                                                .HasForeignKey("LineId");
                                        });
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
